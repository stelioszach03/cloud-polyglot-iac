name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [aws, azure, gcp, common-networking]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Terraform Init
        working-directory: ./${{ matrix.module }}
        run: terraform init -backend=false
      
      - name: Terraform Format
        working-directory: ./${{ matrix.module }}
        run: terraform fmt -check -recursive
      
      - name: Terraform Validate
        working-directory: ./${{ matrix.module }}
        run: terraform validate

  terratest:
    name: Terratest
    needs: terraform-lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        provider: [aws, azure, gcp]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Get Go dependencies
        working-directory: ./tests
        run: go mod download
      
      - name: Test AWS
        if: matrix.provider == 'aws'
        working-directory: ./tests
        run: go test -v -timeout 30m -run TestAWSInfrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      
      - name: Test Azure
        if: matrix.provider == 'azure'
        working-directory: ./tests
        run: go test -v -timeout 30m -run TestAzureInfrastructure
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      
      - name: Test GCP
        if: matrix.provider == 'gcp'
        working-directory: ./tests
        run: go test -v -timeout 30m -run TestGCPInfrastructure
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}

  terraform-plan:
    name: Terraform Plan
    needs: terratest
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        module: [aws, azure, gcp]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Terraform Init
        working-directory: ./${{ matrix.module }}
        run: terraform init -backend=false
      
      - name: Terraform Plan
        working-directory: ./${{ matrix.module }}
        run: |
          terraform plan -no-color -input=false -var-file=examples/test.tfvars > plan.txt
        continue-on-error: true
      
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: plan-${{ matrix.module }}
          path: ./${{ matrix.module }}/plan.txt